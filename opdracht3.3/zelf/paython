# Define the chess board as a 2D list
board = [['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],
         ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
         ['.', '.', '.', '.', '.', '.', '.', '.'],
         ['.', '.', '.', '.', '.', '.', '.', '.'],
         ['.', '.', '.', '.', '.', '.', '.', '.'],
         ['.', '.', '.', '.', '.', '.', '.', '.'],
         ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
         ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']]

# Function to print the current state of the board
def print_board(board):
    for row in board:
        print(' '.join(row))

# Function to check if a move is valid
def is_valid_move(board, start, end):
    # Implement your move validation logic here
    return True  # Placeholder for now

# Main game loop
while True:
    # Print the current board
    print_board(board)

    # Get input from the current player
    start = input("Enter the piece to move (e.g., 'e2'): ")
    end = input("Enter the destination (e.g., 'e4'): ")

    # Check if the move is valid
    if is_valid_move(board, start, end):
        # Implement move logic here
        # Update the board based on the move
        # Check for checkmate, stalemate, etc.

        # Placeholder for now
        print("Valid move! Piece moved from {} to {}.".format(start, end))
    else:
        print("Invalid move. Try again.")